name: Python Tests

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        python-version: ["3.8", "3.13"]
        os: [ubuntu-latest, macos-latest]

    steps:
      - uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Cache node modules
        uses: actions/cache@v4
        with:
         path: ~/.npm  # location where npm stores its cache
         key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
         restore-keys: |
           ${{ runner.os }}-node-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run pytest
        run: |
          pytest tests/


  # Job 2: Snyk Vulnerability Scan
  snyk-scan:
    name: Snyk Security Scan
    needs: test # Ensures this runs after the build/test job completes successfully
    runs-on: ubuntu-latest
        
    permissions:
      contents: read # Required to checkout the code
      security-events: write # Required to upload SARIF results

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    # You might need to install node dependencies for Snyk to scan your package-lock.json correctly
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.12"

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    #Set up the official Snyk CLI
    - name: Set up Snyk CLI
      uses: snyk/actions/setup@v3

    #Run Snyk test for Python requirements
    - name: Run Snyk to check for vulnerabilities
      env:
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      run: snyk test --file=requirements.txt --package-manager=pip --sarif-file-output=snyk-results.sarif

    - name: Upload Snyk scan results to GitHub Security tab
      uses: github/codeql-action/upload-sarif@v3
      with:
        sarif_file: snyk-results.sarif   
      
